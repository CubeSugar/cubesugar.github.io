{"version":3,"sources":["page/resume/component/BriefInfoView.module.scss","page/resume/component/OpenSourceInfoView.module.scss","page/resume/Resume.module.scss","page/resume/component/CompanyInfoView.module.scss","page/resume/component/EducationInfoView.module.scss","page/resume/component/GroupView.module.scss","page/resume/component/SkillInfoView.module.scss","page/resume/theme-context.ts","page/resume/component/BriefInfoView.tsx","page/resume/component/BriefInfoSkeleton.tsx","page/resume/component/GroupView.tsx","page/resume/component/GroupViewSkeleton.tsx","page/resume/component/SkillInfoView.tsx","page/resume/component/Timeline.tsx","page/resume/component/ProjectInfoView.tsx","page/resume/component/CompanyInfoView.tsx","page/resume/component/EducationInfoView.tsx","page/resume/component/OpenSourceInfoView.tsx","page/resume/Resume.tsx","utils/hook/useGistResume.ts","App.tsx","serviceWorker.ts","index.tsx","page/resume/component/Timeline.module.scss","page/resume/component/ProjectInfoView.module.scss"],"names":["module","exports","themes","light","htmlBackgroundColor","pageBackgroundColor","mainFontColor","skeletonColor","dark","ThemeContext","createContext","contactConfigs","phone","renderIcon","fill","xmlns","viewBox","d","hrefFunc","s","email","github","BriefInfoView","info","theme","useContext","className","styles","profile","part","name","jobTitle","workTitle","contacts","map","item","type","icon","href","content","key","contactItem","contactIcon","BriefInfoSkeleton","height","width","speed","primaryColor","secondaryColor","classnames","skeletonPart","x","y","rx","ry","cx","cy","r","GroupView","title","children","box","GroupViewSkeleton","skeletonTitle","skeletonContent","SkillInfoView","subGroup","subTitle","tagContainer","items","sort","a","b","level","tag","i","emptyPoint","fullPoint","Timeline","data","renderItem","keyExtrator","itemClassName","index","id","contentElm","sharedStyles","noBreakInside","timeSide","startDate","endDate","itemContentBox","itemContent","timeInRow","projMark","projMarkTag","tagsContainer","skillTags","desc","description","achievement","duties","feat","ProjectInfoView","intro","length","duty","substr","achievements","achiev","CompanyInfoView","degree","major","m","EducationInfoView","OpenSourceInfoView","proj","cell","repoUrl","tags","ResumePage","useState","window","matchMedia","matches","resume","setResume","process","url","setUrl","isLoading","setIsLoading","isError","setIsError","useEffect","async","axios","resp","Promise","resolve","setTimeout","fetchData","useGistResume","document","documentElement","style","backgroundColor","body","Provider","value","container","page","alert","brief","infos","App","Resume","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mFACAA,EAAOC,QAAU,CAAC,QAAU,+BAA+B,KAAO,4BAA4B,KAAO,4BAA4B,SAAW,gCAAgC,YAAc,mCAAmC,YAAc,qC,mBCA3OD,EAAOC,QAAU,CAAC,KAAO,iCAAiC,KAAO,iCAAiC,aAAe,2C,mBCAjHD,EAAOC,QAAU,CAAC,UAAY,0BAA0B,KAAO,qBAAqB,MAAQ,wB,wCCA5FD,EAAOC,QAAU,CAAC,IAAM,+B,mBCAxBD,EAAOC,QAAU,CAAC,IAAM,iC,sDCAxBD,EAAOC,QAAU,CAAC,IAAM,uBAAuB,QAAU,2BAA2B,cAAgB,iCAAiC,gBAAkB,qC,uCCAvJD,EAAOC,QAAU,CAAC,IAAM,2BAA2B,SAAW,gCAAgC,aAAe,oCAAoC,IAAM,2BAA2B,WAAa,kCAAkC,UAAY,mC,mICYhOC,EAA+C,CAC1DC,MAAO,CACLC,oBAAqB,SACrBC,oBAAqB,OACrBC,cAAe,OACfC,cAAe,CAAC,UAAW,YAE7BC,KAAM,CACJJ,oBAAqB,UACrBC,oBAAqB,UACrBC,cAAe,UACfC,cAAe,CAAC,UAAW,aAIlBE,EAAeC,wBAAcR,EAAOC,O,gBCkC3CQ,EAAiB,CACrBC,MAAO,CACLC,WA1DoC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzC,OACE,yBAAKC,MAAM,6BAA6BC,QAAQ,aAC9C,0BAAMF,KAAK,OAAOG,EAAE,oBACpB,0BAEEH,KAAMA,EACNG,EAAE,8ZAoDNC,SAAU,SAACC,GAAD,oBAAsBA,KAElCC,MAAO,CACLP,WAjDoC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACzC,OACE,yBAAKC,MAAM,6BAA6BC,QAAQ,aAC9C,0BAAMF,KAAK,OAAOG,EAAE,oBACpB,0BAEEH,KAAMA,EACNG,EAAE,0HA2CNC,SAAU,SAACC,GAAD,uBAAyBA,KAErCE,OAAQ,CACNR,WAxCqC,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC1C,OACE,yBAAKC,MAAM,6BAA6BC,QAAQ,uBAC9C,0BACEF,KAAMA,EACNG,EAAE,opEAoCNC,SAAU,SAACC,GAAD,OAAeA,KAiCdG,EAzBwB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClCC,EAAQC,qBAAWhB,GACzB,OACE,4BAAQiB,UAAWC,IAAOC,SACxB,yBAAKF,UAAWC,IAAOE,MACrB,yBAAKH,UAAWC,IAAOG,MAAOP,EAAKO,MACnC,yBAAKJ,UAAWC,IAAOI,UAAWR,EAAKS,YAEzC,yBAAKN,UAAWC,IAAOE,MACpBN,EAAKU,SAASC,KAAI,SAAAC,GAAS,IAAD,EACQxB,EAAewB,EAAKC,MAA7CvB,EADiB,EACjBA,WAAYK,EADK,EACLA,SACdmB,EAAOxB,EAAW,CAAEC,KAAK,GAAD,OAAKU,EAAMlB,iBACnCgC,EAAOpB,EAASiB,EAAKI,SAC3B,OACE,yBAAKC,IAAKL,EAAKC,KAAMV,UAAWC,IAAOc,aACrC,0BAAMf,UAAWC,IAAOe,aAAcL,GACtC,uBAAGC,KAAMA,GAAOH,EAAKI,gB,uBCzDpBI,EAlCqB,WAClC,IAAMnB,EAAQC,qBAAWhB,GACzB,OACE,yBAAKiB,UAAWC,IAAOC,SACrB,kBAAC,IAAD,CACEgB,OAAQ,IACRC,MAAO,IACPC,MAAO,EACPC,aAAcvB,EAAMjB,cAAc,GAClCyC,eAAgBxB,EAAMjB,cAAc,GACpCmB,UAAWuB,IAAWtB,IAAOE,KAAMF,IAAOuB,eAE1C,0BAAMC,EAAE,IAAIC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIT,MAAM,MAAMD,OAAO,OACpD,0BAAMO,EAAE,IAAIC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIT,MAAM,MAAMD,OAAO,QAEtD,kBAAC,IAAD,CACEA,OAAQ,IACRC,MAAO,IACPC,MAAO,EACPC,aAAcvB,EAAMjB,cAAc,GAClCyC,eAAgBxB,EAAMjB,cAAc,GACpCmB,UAAWuB,IAAWtB,IAAOE,KAAMF,IAAOuB,eAE1C,4BAAQK,GAAG,IAAIC,GAAG,KAAKC,EAAE,MACzB,4BAAQF,GAAG,IAAIC,GAAG,KAAKC,EAAE,MACzB,4BAAQF,GAAG,IAAIC,GAAG,KAAKC,EAAE,MACzB,0BAAMN,EAAE,KAAKC,EAAE,IAAIC,GAAG,IAAIC,GAAG,IAAIT,MAAM,MAAMD,OAAO,OACpD,0BAAMO,EAAE,KAAKC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIT,MAAM,MAAMD,OAAO,OACrD,0BAAMO,EAAE,KAAKC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIT,MAAM,MAAMD,OAAO,U,gBChB9Cc,EAXoB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC3C,OACE,6BAASlC,UAAWC,IAAOkC,KACzB,gCACE,wBAAInC,UAAWC,IAAOgC,OAAQA,IAEhC,yBAAKjC,UAAWC,IAAOY,SAAUqB,KC0BxBE,EAlCqB,SAAC,GAAkB,IAAhBF,EAAe,EAAfA,SAC/BpC,EAAQC,qBAAWhB,GACzB,OACE,6BAASiB,UAAWC,IAAOkC,KACzB,kBAAC,IAAD,CACEjB,OAAQ,GACRC,MAAO,IACPC,MAAO,EACPC,aAAcvB,EAAMjB,cAAc,GAClCyC,eAAgBxB,EAAMjB,cAAc,GACpCmB,UAAWC,IAAOoC,eAElB,0BAAMZ,EAAE,IAAIC,EAAE,IAAIC,GAAG,IAAIC,GAAG,IAAIT,MAAM,MAAMD,OAAO,QAEpDgB,EACC,yBAAKlC,UAAWC,IAAOY,SAAUqB,GAEjC,kBAAC,IAAD,CACEhB,OAAQ,IACRC,MAAO,IACPC,MAAO,EACPC,aAAcvB,EAAMjB,cAAc,GAClCyC,eAAgBxB,EAAMjB,cAAc,GACpCmB,UAAWC,IAAOqC,iBAElB,0BAAMb,EAAE,IAAIC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIT,MAAM,MAAMD,OAAO,QACpD,0BAAMO,EAAE,IAAIC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIT,MAAM,MAAMD,OAAO,QACrD,0BAAMO,EAAE,IAAIC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIT,MAAM,MAAMD,OAAO,W,gBCQhDqB,EAjCwB,SAAC,GAAiB,IAAf1B,EAAc,EAAdA,QACxC,OACE,oCACGA,EAAQL,KAAI,SAAAgC,GACX,OACE,yBAAK1B,IAAK0B,EAASC,SAAUzC,UAAWC,IAAOkC,KAC7C,wBAAInC,UAAWC,IAAOwC,UAAWD,EAASC,UAC1C,yBAAKzC,UAAWC,IAAOyC,cACpBF,EAASG,MACPC,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,MAAQF,EAAEE,SAC3BvC,KAAI,SAAAC,GAAI,OACP,yBACEK,IAAKL,EAAKL,KAEVJ,UAAWC,IAAO+C,KAElB,8BAAOvC,EAAKL,MACX,CAAC,EAAG,EAAG,EAAG,EAAG,GAAGI,KAAI,SAAAyC,GAAC,OACpB,0BACEnC,IAAKmC,EACLjD,UAAWiD,EAAIxC,EAAKsC,MAAQ9C,IAAOiD,WAAajD,IAAOkD,0B,iCC6BhEC,EAxCqB,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,KAAMC,EAAkD,EAAlDA,WAAYC,EAAsC,EAAtCA,YAAsC,IAAzBC,qBAAyB,MAAT,GAAS,EAC7F,OACE,yBAAKxD,UAAWC,IAAOkC,KACpBkB,EAAK7C,KAAI,SAACC,EAAMgD,GACf,IAAM3C,EAAML,EAAKiD,IAAOH,GAAeA,EAAY9C,EAAMgD,IAAWA,EAC9DzD,EACqB,oBAAlBwD,EAA+BA,EAAc/C,EAAMgD,GAASD,EAC/DG,EAAaL,EAAW7C,EAAMgD,GACpC,OACE,6BAAS3C,IAAKA,EAAKd,UAAWuB,IAAWtB,IAAOQ,KAAMmD,IAAaC,gBACjE,yBAAK7D,UAAWC,IAAO6D,UACrB,8BACE,wCAAUrD,EAAKsD,aAEjB,qCACA,8BACE,wCAAUtD,EAAKuD,SAAW,aAG9B,yBAAKlD,IAAKA,EAAKd,UAAWC,IAAOgE,gBAC/B,yBAAKjE,UAAWC,IAAOiE,aACrB,uBAAGlE,UAAWC,IAAOkE,WACnB,8BACE,wCAAU1D,EAAKsD,aAEjB,qCACA,8BACE,wCAAUtD,EAAKuD,SAAW,aAG9B,yBAAKhE,UAAWA,GAAY2D,W,gBCtCtCL,EAAoE,SAAA7C,GACxE,OACE,iCACE,wBAAIT,UAAWC,IAAOgC,OACpB,wCAAUxB,EAAKL,SACZK,EAAK2D,UAAY,0BAAMpE,UAAWC,IAAOoE,aAAc5D,EAAK2D,WAEjE,yBAAKpE,UAAWC,IAAOqE,eACpB7D,EAAK8D,UAAU/D,KAAI,SAAAwC,GAAG,OACrB,0BAAMlC,IAAKkC,GAAMA,OAGrB,uBAAGhD,UAAWC,IAAOuE,MAArB,UAA+B/D,EAAKgE,cACpC,yBAAKzE,UAAWC,IAAOyE,aACrB,4BACGjE,EAAKkE,OAAOnE,KAAI,SAAAoE,GAAI,OACnB,wBAAI9D,IAAK8D,GAAOA,UAQtBrB,EAAyD,SAAA9C,GAAI,OAAIA,EAAKL,MAa7DyE,EAX0B,SAAC,GAAiB,IAAfhE,EAAc,EAAdA,QAC1C,OACE,kBAAC,EAAD,CACEwC,KAAMxC,EACNyC,WAAYA,EACZE,cAAevD,IAAOQ,KACtB8C,YAAaA,K,iBChCbD,EAAuE,SAAA7C,GAC3E,OACE,6BAAST,UAAWC,IAAOkC,KACzB,4BACE,8BAAO1B,EAAKL,QACTK,EAAKJ,UACN,oCACE,qCACA,8BAAOI,EAAKJ,cAIfI,EAAKqE,OAAS,2BAAIrE,EAAKqE,SACvBrE,EAAKgE,aAAe,2BAAIhE,EAAKgE,eAC7BhE,EAAKkE,QAAUlE,EAAKkE,OAAOI,OAAS,GACrC,oCAEE,4BACGtE,EAAKkE,OAAOnE,KAAI,SAAAwE,GAAI,OACnB,wBAAIlE,IAAKkE,EAAKC,OAAO,EAAG,KAAMD,UAKnCvE,EAAKyE,cAAgBzE,EAAKyE,aAAaH,OAAS,GACjD,oCACE,uDACA,4BACGtE,EAAKyE,aAAa1E,KAAI,SAAA2E,GAAM,OAC3B,wBAAIrE,IAAKqE,EAAOF,OAAO,EAAG,KAAME,UASxC5B,EAA4D,SAAA9C,GAAI,OAAIA,EAAKL,MAMhEgF,EAJ0B,SAAC,GAAiB,IAAfvE,EAAc,EAAdA,QAC1C,OAAO,kBAAC,EAAD,CAAUwC,KAAMxC,EAASyC,WAAYA,EAAYC,YAAaA,K,iBCzCjED,EAAyE,SAAA7C,GAC7E,OACE,6BAAST,UAAWC,IAAOkC,KACzB,4BACE,8BAAO1B,EAAKL,MACZ,qCACA,8BAAOK,EAAK4E,SAEd,4BACG5E,EAAK6E,MAAM9E,KAAI,SAAA+E,GAAC,OACf,wBAAIzE,IAAKyE,GAAIA,SAOjBhC,EAA8D,SAAA9C,GAAI,OAAIA,EAAKL,MAMlEoF,EAJ4B,SAAC,GAAiB,IAAf3E,EAAc,EAAdA,QAC5C,OAAO,kBAAC,EAAD,CAAUwC,KAAMxC,EAASyC,WAAYA,EAAYC,YAAaA,K,iBCKxDkC,EA1B6B,SAAC,GAAiB,IAAf5E,EAAc,EAAdA,QAC7C,OACE,oCACGA,EAAQL,KAAI,SAAAkF,GACX,OACE,6BAAS5E,IAAK4E,EAAKtF,KAAMJ,UAAWC,IAAO0F,MACzC,4BACE,uBAAG/E,KAAM8E,EAAKE,SAAUF,EAAKtF,OAE9BsF,EAAKG,MAAQH,EAAKG,KAAKd,OAAS,GAC/B,yBAAK/E,UAAWC,IAAOyC,cACpBgD,EAAKG,KAAKrF,KAAI,SAAAwC,GAAG,OAChB,yBAAKlC,IAAKkC,GACR,8BAAOA,QAKf,uBAAGhD,UAAWC,IAAOuE,MAAOkB,EAAKjB,mB,iBCgD9BqB,GAtDc,WAAO,IAAD,EACjBC,mBAHGC,OAAOC,YAAcD,OAAOC,WAAW,gCAAgCC,QAGtD1H,EAAOM,KAAON,EAAOC,OAAlDqB,EAD0B,sBCV/B,WAAO,IAAD,EACoBiG,mBAAwB,MAD5C,mBACDI,EADC,KACOC,EADP,OAEcL,mBAAiBM,oGAF/B,mBAEDC,EAFC,KAEIC,EAFJ,OAG0BR,oBAAkB,GAH5C,mBAGDS,EAHC,KAGUC,EAHV,OAIsBV,oBAAkB,GAJxC,mBAIDW,EAJC,KAIQC,EAJR,KA0BR,OApBAC,qBAAU,WACR,GAAKN,EAAL,EAGuC,mBAAAzD,EAAAgE,OAAA,uDACrCF,GAAW,GACXF,GAAa,GAFwB,oBAAA5D,EAAA,MAIhBiE,IAAMR,IAJU,cAI7BS,EAJ6B,kBAAAlE,EAAA,MAK7B,IAAImE,SAAQ,SAAAC,GAAO,OAAIC,YAAW,kBAAMD,MAAW,SALtB,OAMnCb,EAAUW,EAAK1D,MANoB,kDAQnCsD,GAAW,GARwB,yBAUnCF,GAAa,GAVsB,4EAavCU,MACC,CAACb,IAEG,CAAC,CAAEH,SAAQK,YAAWE,WAAWH,GDdqBa,GAF5B,sBAExBjB,EAFwB,EAExBA,OAAQK,EAFgB,EAEhBA,UAAWE,EAFK,EAELA,QAW5B,OATAE,qBAAU,WAGR,OAFAS,SAASC,gBAAgBC,MAAMC,gBAA/B,UAAoD1H,EAAMpB,qBAC1D2I,SAASI,KAAKF,MAAMC,gBAApB,UAAyC1H,EAAMpB,qBACxC,WACL2I,SAASC,gBAAgBC,MAAMC,gBAAkB,GACjDH,SAASI,KAAKF,MAAMC,gBAAkB,MAEvC,CAAC1H,IAGF,kBAACf,EAAa2I,SAAd,CAAuBC,MAAO7H,GAC5B,yBAAK4D,GAAG,iBAAiB1D,UAAWC,IAAO2H,WACzC,0BAAM5H,UAAWC,IAAO4H,OACpBrB,IAAcL,IACd,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,OAIHO,GACC,yBAAK1G,UAAWC,IAAO6H,OAAvB,mDAEE,6BAFF,qGAOAtB,IAAcE,GAAWP,GACzB,oCACE,kBAAC,EAAD,CAAetG,KAAMsG,EAAO4B,QAC3B5B,EAAO6B,MAAMxH,KAAI,SAAAX,GAChB,OACE,kBAAC,EAAD,CAAWiB,IAAKjB,EAAKoC,MAAOA,MAAOpC,EAAKoC,OACvB,UAAdpC,EAAKa,MAAoB,kBAAC,EAAD,CAAeG,QAAShB,EAAKgB,UACxC,YAAdhB,EAAKa,MAAsB,kBAAC,EAAD,CAAiBG,QAAShB,EAAKgB,UAC5C,YAAdhB,EAAKa,MAAsB,kBAAC,EAAD,CAAiBG,QAAShB,EAAKgB,UAC5C,cAAdhB,EAAKa,MAAwB,kBAAC,EAAD,CAAmBG,QAAShB,EAAKgB,UAChD,eAAdhB,EAAKa,MAAyB,kBAAC,EAAD,CAAoBG,QAAShB,EAAKgB,mBEtDtEoH,GAJO,WACpB,OAAO,kBAACC,GAAD,OCQWC,QACW,cAA7BnC,OAAOoC,SAASC,UAEe,UAA7BrC,OAAOoC,SAASC,UAEhBrC,OAAOoC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,GAAD,MAASnB,SAASoB,eAAe,SDoI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,kBE5InBzK,EAAOC,QAAU,CAAC,SAAW,2BAA2B,UAAY,4BAA4B,KAAO,uBAAuB,eAAiB,iCAAiC,YAAc,gC,kBCA9LD,EAAOC,QAAU,CAAC,KAAO,8BAA8B,MAAQ,+BAA+B,SAAW,kCAAkC,YAAc,qCAAqC,cAAgB,uCAAuC,YAAc,wC","file":"static/js/main.9b6adc03.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"BriefInfoView_profile__2bQ3Q\",\"part\":\"BriefInfoView_part__19MC2\",\"name\":\"BriefInfoView_name__1ROy4\",\"jobTitle\":\"BriefInfoView_jobTitle__15Np-\",\"contactItem\":\"BriefInfoView_contactItem__3D3vA\",\"contactIcon\":\"BriefInfoView_contactIcon__1Lm4Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cell\":\"OpenSourceInfoView_cell__2B6e9\",\"desc\":\"OpenSourceInfoView_desc__17Isv\",\"tagContainer\":\"OpenSourceInfoView_tagContainer__N-Pfe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Resume_container__3oM66\",\"page\":\"Resume_page__1zfik\",\"alert\":\"Resume_alert__2O6os\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"CompanyInfoView_box__2EaDd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"EducationInfoView_box__2MQSw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"GroupView_box__2hcSw\",\"content\":\"GroupView_content__joWDb\",\"skeletonTitle\":\"GroupView_skeletonTitle__2ZFR0\",\"skeletonContent\":\"GroupView_skeletonContent__TlqwF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"SkillInfoView_box__3r3CU\",\"subTitle\":\"SkillInfoView_subTitle__1EvM1\",\"tagContainer\":\"SkillInfoView_tagContainer__tiCAg\",\"tag\":\"SkillInfoView_tag__3VuxI\",\"emptyPoint\":\"SkillInfoView_emptyPoint__ocM4k\",\"fullPoint\":\"SkillInfoView_fullPoint___qQcH\"};","import { createContext } from 'react'\n\ntype ThemeConfig = {\n  // primaryColor: string\n  // secondaryColor: string\n  htmlBackgroundColor: string\n  pageBackgroundColor: string\n  mainFontColor: string\n  skeletonColor: [string, string]\n}\n\ntype ThemeNames = 'light' | 'dark'\n\nexport const themes: { [key in ThemeNames]: ThemeConfig } = {\n  light: {\n    htmlBackgroundColor: 'f7f8f9',\n    pageBackgroundColor: '#fff',\n    mainFontColor: '#000',\n    skeletonColor: ['#f3f3f3', '#ecebeb'],\n  },\n  dark: {\n    htmlBackgroundColor: '#22303f',\n    pageBackgroundColor: '#18222d',\n    mainFontColor: '#d1d5d9',\n    skeletonColor: ['#22303f', '#18222d'],\n  },\n}\n\nexport const ThemeContext = createContext(themes.light)\n","import React, { useContext } from 'react'\nimport { ThemeContext } from '../theme-context'\nimport styles from './BriefInfoView.module.scss'\n\ntype RenderIconFunc = (props: { fill: string }) => React.ReactElement\n\nconst renderPhoneIcon: RenderIconFunc = ({ fill }) => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n      <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\n      <path\n        // stroke={stroke}\n        fill={fill}\n        d=\"M6.54 5c.06.89.21 1.76.45 2.59l-1.2 1.2c-.41-1.2-.67-2.47-.76-3.79h1.51m9.86 12.02c.85.24 1.72.39 2.6.45v1.49c-1.32-.09-2.59-.35-3.8-.75l1.2-1.19M7.5 3H4c-.55 0-1 .45-1 1 0 9.39 7.61 17 17 17 .55 0 1-.45 1-1v-3.49c0-.55-.45-1-1-1-1.24 0-2.45-.2-3.57-.57-.1-.04-.21-.05-.31-.05-.26 0-.51.1-.71.29l-2.2 2.2c-2.83-1.45-5.15-3.76-6.59-6.59l2.2-2.2c.28-.28.36-.67.25-1.02C8.7 6.45 8.5 5.25 8.5 4c0-.55-.45-1-1-1z\"\n      />\n    </svg>\n  )\n}\n\nconst renderEmailIcon: RenderIconFunc = ({ fill }) => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n      <path fill=\"none\" d=\"M0 0h24v24H0V0z\" />\n      <path\n        // stroke={stroke}\n        fill={fill}\n        d=\"M22 6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6zm-2 0l-8 5-8-5h16zm0 12H4V8l8 5 8-5v10z\"\n      />\n    </svg>\n  )\n}\n\nconst renderGithubIcon: RenderIconFunc = ({ fill }) => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 438.549 438.549\">\n      <path\n        fill={fill}\n        d=\"M409.132,114.573c-19.608-33.596-46.205-60.194-79.798-79.8C295.736,15.166,259.057,5.365,219.271,5.365\n\t\tc-39.781,0-76.472,9.804-110.063,29.408c-33.596,19.605-60.192,46.204-79.8,79.8C9.803,148.168,0,184.854,0,224.63\n\t\tc0,47.78,13.94,90.745,41.827,128.906c27.884,38.164,63.906,64.572,108.063,79.227c5.14,0.954,8.945,0.283,11.419-1.996\n\t\tc2.475-2.282,3.711-5.14,3.711-8.562c0-0.571-0.049-5.708-0.144-15.417c-0.098-9.709-0.144-18.179-0.144-25.406l-6.567,1.136\n\t\tc-4.187,0.767-9.469,1.092-15.846,1c-6.374-0.089-12.991-0.757-19.842-1.999c-6.854-1.231-13.229-4.086-19.13-8.559\n\t\tc-5.898-4.473-10.085-10.328-12.56-17.556l-2.855-6.57c-1.903-4.374-4.899-9.233-8.992-14.559\n\t\tc-4.093-5.331-8.232-8.945-12.419-10.848l-1.999-1.431c-1.332-0.951-2.568-2.098-3.711-3.429c-1.142-1.331-1.997-2.663-2.568-3.997\n\t\tc-0.572-1.335-0.098-2.43,1.427-3.289c1.525-0.859,4.281-1.276,8.28-1.276l5.708,0.853c3.807,0.763,8.516,3.042,14.133,6.851\n\t\tc5.614,3.806,10.229,8.754,13.846,14.842c4.38,7.806,9.657,13.754,15.846,17.847c6.184,4.093,12.419,6.136,18.699,6.136\n\t\tc6.28,0,11.704-0.476,16.274-1.423c4.565-0.952,8.848-2.383,12.847-4.285c1.713-12.758,6.377-22.559,13.988-29.41\n\t\tc-10.848-1.14-20.601-2.857-29.264-5.14c-8.658-2.286-17.605-5.996-26.835-11.14c-9.235-5.137-16.896-11.516-22.985-19.126\n\t\tc-6.09-7.614-11.088-17.61-14.987-29.979c-3.901-12.374-5.852-26.648-5.852-42.826c0-23.035,7.52-42.637,22.557-58.817\n\t\tc-7.044-17.318-6.379-36.732,1.997-58.24c5.52-1.715,13.706-0.428,24.554,3.853c10.85,4.283,18.794,7.952,23.84,10.994\n\t\tc5.046,3.041,9.089,5.618,12.135,7.708c17.705-4.947,35.976-7.421,54.818-7.421s37.117,2.474,54.823,7.421l10.849-6.849\n\t\tc7.419-4.57,16.18-8.758,26.262-12.565c10.088-3.805,17.802-4.853,23.134-3.138c8.562,21.509,9.325,40.922,2.279,58.24\n\t\tc15.036,16.18,22.559,35.787,22.559,58.817c0,16.178-1.958,30.497-5.853,42.966c-3.9,12.471-8.941,22.457-15.125,29.979\n\t\tc-6.191,7.521-13.901,13.85-23.131,18.986c-9.232,5.14-18.182,8.85-26.84,11.136c-8.662,2.286-18.415,4.004-29.263,5.146\n\t\tc9.894,8.562,14.842,22.077,14.842,40.539v60.237c0,3.422,1.19,6.279,3.572,8.562c2.379,2.279,6.136,2.95,11.276,1.995\n\t\tc44.163-14.653,80.185-41.062,108.068-79.226c27.88-38.161,41.825-81.126,41.825-128.906\n\t\tC438.536,184.851,428.728,148.168,409.132,114.573z\"\n      />\n    </svg>\n  )\n}\n\nconst contactConfigs = {\n  phone: {\n    renderIcon: renderPhoneIcon,\n    hrefFunc: (s: string) => `tel:${s}`,\n  },\n  email: {\n    renderIcon: renderEmailIcon,\n    hrefFunc: (s: string) => `mailto:${s}`,\n  },\n  github: {\n    renderIcon: renderGithubIcon,\n    hrefFunc: (s: string) => s,\n  },\n}\n\ntype Props = {\n  info: BriefInfo\n}\n\nconst BriefInfoView: React.FC<Props> = ({ info }) => {\n  const theme = useContext(ThemeContext)\n  return (\n    <header className={styles.profile}>\n      <div className={styles.part}>\n        <div className={styles.name}>{info.name}</div>\n        <div className={styles.jobTitle}>{info.workTitle}</div>\n      </div>\n      <div className={styles.part}>\n        {info.contacts.map(item => {\n          const { renderIcon, hrefFunc } = contactConfigs[item.type]\n          const icon = renderIcon({ fill: `${theme.mainFontColor}` })\n          const href = hrefFunc(item.content)\n          return (\n            <div key={item.type} className={styles.contactItem}>\n              <span className={styles.contactIcon}>{icon}</span>\n              <a href={href}>{item.content}</a>\n            </div>\n          )\n        })}\n      </div>\n    </header>\n  )\n}\n\nexport default BriefInfoView\n","import React, { useContext } from 'react'\nimport classnames from 'classnames'\nimport ContentLoader from 'react-content-loader'\nimport { ThemeContext } from '../theme-context'\nimport styles from './BriefInfoView.module.scss'\n\nconst BriefInfoSkeleton: React.FC = () => {\n  const theme = useContext(ThemeContext)\n  return (\n    <div className={styles.profile}>\n      <ContentLoader\n        height={100}\n        width={320}\n        speed={2}\n        primaryColor={theme.skeletonColor[0]}\n        secondaryColor={theme.skeletonColor[1]}\n        className={classnames(styles.part, styles.skeletonPart)}\n      >\n        <rect x=\"0\" y=\"10\" rx=\"4\" ry=\"4\" width=\"140\" height=\"45\" />\n        <rect x=\"0\" y=\"60\" rx=\"4\" ry=\"4\" width=\"240\" height=\"25\" />\n      </ContentLoader>\n      <ContentLoader\n        height={100}\n        width={320}\n        speed={2}\n        primaryColor={theme.skeletonColor[0]}\n        secondaryColor={theme.skeletonColor[1]}\n        className={classnames(styles.part, styles.skeletonPart)}\n      >\n        <circle cx=\"8\" cy=\"16\" r=\"8\" />\n        <circle cx=\"8\" cy=\"50\" r=\"8\" />\n        <circle cx=\"8\" cy=\"80\" r=\"8\" />\n        <rect x=\"40\" y=\"8\" rx=\"4\" ry=\"4\" width=\"260\" height=\"16\" />\n        <rect x=\"40\" y=\"42\" rx=\"4\" ry=\"4\" width=\"260\" height=\"16\" />\n        <rect x=\"40\" y=\"72\" rx=\"4\" ry=\"4\" width=\"260\" height=\"16\" />\n      </ContentLoader>\n    </div>\n  )\n}\n\nexport default BriefInfoSkeleton\n","import React from 'react'\nimport styles from './GroupView.module.scss'\n\ntype Props = {\n  title: string\n}\n\nconst GroupView: React.FC<Props> = ({ title, children }) => {\n  return (\n    <section className={styles.box}>\n      <hgroup>\n        <h2 className={styles.title}>{title}</h2>\n      </hgroup>\n      <div className={styles.content}>{children}</div>\n    </section>\n  )\n}\n\nexport default GroupView\n","import React, { useContext } from 'react'\nimport ContentLoader from 'react-content-loader'\nimport { ThemeContext } from '../theme-context'\nimport styles from './GroupView.module.scss'\n\nconst GroupViewSkeleton: React.FC = ({ children }) => {\n  const theme = useContext(ThemeContext)\n  return (\n    <section className={styles.box}>\n      <ContentLoader\n        height={50}\n        width={320}\n        speed={2}\n        primaryColor={theme.skeletonColor[0]}\n        secondaryColor={theme.skeletonColor[1]}\n        className={styles.skeletonTitle}\n      >\n        <rect x=\"0\" y=\"5\" rx=\"4\" ry=\"4\" width=\"100\" height=\"40\" />\n      </ContentLoader>\n      {children ? (\n        <div className={styles.content}>{children}</div>\n      ) : (\n        <ContentLoader\n          height={550}\n          width={320}\n          speed={2}\n          primaryColor={theme.skeletonColor[0]}\n          secondaryColor={theme.skeletonColor[1]}\n          className={styles.skeletonContent}\n        >\n          <rect x=\"0\" y=\"10\" rx=\"4\" ry=\"4\" width=\"320\" height=\"170\" />\n          <rect x=\"0\" y=\"190\" rx=\"4\" ry=\"4\" width=\"320\" height=\"170\" />\n          <rect x=\"0\" y=\"370\" rx=\"4\" ry=\"4\" width=\"320\" height=\"170\" />\n        </ContentLoader>\n      )}\n    </section>\n  )\n}\n\nexport default GroupViewSkeleton\n","import React from 'react'\nimport styles from './SkillInfoView.module.scss'\n\ntype Props = {\n  content: SkillSubGroup[]\n}\n\nconst SkillInfoView: React.FC<Props> = ({ content }) => {\n  return (\n    <>\n      {content.map(subGroup => {\n        return (\n          <div key={subGroup.subTitle} className={styles.box}>\n            <h3 className={styles.subTitle}>{subGroup.subTitle}</h3>\n            <div className={styles.tagContainer}>\n              {subGroup.items\n                .sort((a, b) => b.level - a.level)\n                .map(item => (\n                  <div\n                    key={item.name}\n                    // style={{ backgroundColor: `hsl(220, ${30 + item.level * 7}%, 50%)` }}\n                    className={styles.tag}\n                  >\n                    <span>{item.name}</span>\n                    {[1, 2, 3, 4, 5].map(i => (\n                      <span\n                        key={i}\n                        className={i > item.level ? styles.emptyPoint : styles.fullPoint}\n                      />\n                    ))}\n                  </div>\n                ))}\n            </div>\n          </div>\n        )\n      })}\n    </>\n  )\n}\n\nexport default SkillInfoView\n","import React from 'react'\nimport classnames from 'classnames'\nimport sharedStyles from '../style/shared.module.scss'\nimport styles from './Timeline.module.scss'\n\ntype ReturnStringFunc<T> = (item: T, index: number) => string\n\ntype Props<T> = {\n  data: T[]\n  renderItem: (item: T, index: number) => React.ReactElement\n  itemClassName?: string | ReturnStringFunc<T>\n  keyExtrator?: (item: T, index: number) => string\n}\n\nconst Timeline: <T extends { id?: string; startDate: string; endDate?: string }>(\n  props: Props<T>\n) => React.ReactElement<Props<T>> = ({ data, renderItem, keyExtrator, itemClassName = '' }) => {\n  return (\n    <div className={styles.box}>\n      {data.map((item, index) => {\n        const key = item.id || (keyExtrator && keyExtrator(item, index)) || index\n        const className =\n          typeof itemClassName === 'function' ? itemClassName(item, index) : itemClassName\n        const contentElm = renderItem(item, index)\n        return (\n          <section key={key} className={classnames(styles.item, sharedStyles.noBreakInside)}>\n            <div className={styles.timeSide}>\n              <span>\n                <time>{`${item.startDate}`}</time>\n              </span>\n              <span> | </span>\n              <span>\n                <time>{`${item.endDate || '今'}`}</time>\n              </span>\n            </div>\n            <div key={key} className={styles.itemContentBox}>\n              <div className={styles.itemContent}>\n                <p className={styles.timeInRow}>\n                  <span>\n                    <time>{`${item.startDate}`}</time>\n                  </span>\n                  <span> ~ </span>\n                  <span>\n                    <time>{`${item.endDate || '今'}`}</time>\n                  </span>\n                </p>\n                <div className={className}>{contentElm}</div>\n              </div>\n            </div>\n          </section>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default Timeline\n","import React from 'react'\nimport Timeline from './Timeline'\nimport styles from './ProjectInfoView.module.scss'\n\ntype Props = {\n  content: ProjItem[]\n}\n\nconst renderItem: (item: ProjItem, index: number) => React.ReactElement = item => {\n  return (\n    <article>\n      <h3 className={styles.title}>\n        <span>{`${item.name}`}</span>\n        {!!item.projMark && <span className={styles.projMarkTag}>{item.projMark}</span>}\n      </h3>\n      <div className={styles.tagsContainer}>\n        {item.skillTags.map(tag => (\n          <span key={tag}>{tag}</span>\n        ))}\n      </div>\n      <p className={styles.desc}>{`${item.description}`}</p>\n      <div className={styles.achievement}>\n        <ul>\n          {item.duties.map(feat => (\n            <li key={feat}>{feat}</li>\n          ))}\n        </ul>\n      </div>\n    </article>\n  )\n}\n\nconst keyExtrator: (item: ProjItem, index: number) => string = item => item.name\n\nconst ProjectInfoView: React.FC<Props> = ({ content }) => {\n  return (\n    <Timeline\n      data={content}\n      renderItem={renderItem}\n      itemClassName={styles.item}\n      keyExtrator={keyExtrator}\n    />\n  )\n}\n\nexport default ProjectInfoView\n","import React from 'react'\nimport Timeline from './Timeline'\nimport styles from './CompanyInfoView.module.scss'\n\ntype Props = {\n  content: CompanyItem[]\n}\n\nconst renderItem: (item: CompanyItem, index: number) => React.ReactElement = item => {\n  return (\n    <article className={styles.box}>\n      <h3>\n        <span>{item.name}</span>\n        {!!item.jobTitle && (\n          <>\n            <span> | </span>\n            <span>{item.jobTitle}</span>\n          </>\n        )}\n      </h3>\n      {!!item.intro && <p>{item.intro}</p>}\n      {!!item.description && <p>{item.description}</p>}\n      {!!item.duties && item.duties.length > 0 && (\n        <>\n          {/* <p>工作内容</p> */}\n          <ul>\n            {item.duties.map(duty => (\n              <li key={duty.substr(0, 10)}>{duty}</li>\n            ))}\n          </ul>\n        </>\n      )}\n      {!!item.achievements && item.achievements.length > 0 && (\n        <>\n          <p>重要业绩</p>\n          <ul>\n            {item.achievements.map(achiev => (\n              <li key={achiev.substr(0, 10)}>{achiev}</li>\n            ))}\n          </ul>\n        </>\n      )}\n    </article>\n  )\n}\n\nconst keyExtrator: (item: CompanyItem, index: number) => string = item => item.name\n\nconst CompanyInfoView: React.FC<Props> = ({ content }) => {\n  return <Timeline data={content} renderItem={renderItem} keyExtrator={keyExtrator} />\n}\n\nexport default CompanyInfoView\n","import React from 'react'\nimport Timeline from './Timeline'\nimport styles from './EducationInfoView.module.scss'\n\ntype Props = {\n  content: EducationItem[]\n}\n\nconst renderItem: (item: EducationItem, index: number) => React.ReactElement = item => {\n  return (\n    <article className={styles.box}>\n      <h3>\n        <span>{item.name}</span>\n        <span> | </span>\n        <span>{item.degree}</span>\n      </h3>\n      <ul>\n        {item.major.map(m => (\n          <li key={m}>{m}</li>\n        ))}\n      </ul>\n    </article>\n  )\n}\n\nconst keyExtrator: (item: EducationItem, index: number) => string = item => item.name\n\nconst EducationInfoView: React.FC<Props> = ({ content }) => {\n  return <Timeline data={content} renderItem={renderItem} keyExtrator={keyExtrator} />\n}\n\nexport default EducationInfoView\n","import React from 'react'\nimport styles from './OpenSourceInfoView.module.scss'\n\ntype Props = {\n  content: OpenSourceProjItem[]\n}\n\nconst OpenSourceInfoView: React.FC<Props> = ({ content }) => {\n  return (\n    <>\n      {content.map(proj => {\n        return (\n          <article key={proj.name} className={styles.cell}>\n            <h3>\n              <a href={proj.repoUrl}>{proj.name}</a>\n            </h3>\n            {proj.tags && proj.tags.length > 0 && (\n              <div className={styles.tagContainer}>\n                {proj.tags.map(tag => (\n                  <div key={tag}>\n                    <span>{tag}</span>\n                  </div>\n                ))}\n              </div>\n            )}\n            <p className={styles.desc}>{proj.description}</p>\n          </article>\n        )\n      })}\n    </>\n  )\n}\n\nexport default OpenSourceInfoView\n","/* eslint-disable @typescript-eslint/explicit-function-return-type */\nimport React, { useEffect, useState } from 'react'\nimport { useGistResume } from 'utils/hook'\nimport {\n  BriefInfoView,\n  GroupView,\n  SkillInfoView,\n  ProjectInfoView,\n  CompanyInfoView,\n  EducationInfoView,\n  OpenSourceInfoView,\n  BriefInfoSkeleton,\n  GroupViewSkeleton,\n} from './component'\nimport { ThemeContext, themes } from './theme-context'\nimport styles from './Resume.module.scss'\n\nconst isDark = () => window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches\n\nconst ResumePage: React.FC = () => {\n  const [theme] = useState(isDark() ? themes.dark : themes.light)\n  const [{ resume, isLoading, isError } /* , fetchResume */] = useGistResume()\n\n  useEffect(() => {\n    document.documentElement.style.backgroundColor = `${theme.htmlBackgroundColor}`\n    document.body.style.backgroundColor = `${theme.htmlBackgroundColor}`\n    return () => {\n      document.documentElement.style.backgroundColor = ''\n      document.body.style.backgroundColor = ''\n    }\n  }, [theme])\n\n  return (\n    <ThemeContext.Provider value={theme}>\n      <div id=\"page-container\" className={styles.container}>\n        <main className={styles.page}>\n          {(isLoading || !resume) && (\n            <>\n              <BriefInfoSkeleton />\n              <GroupViewSkeleton />\n            </>\n          )}\n\n          {isError && (\n            <div className={styles.alert}>\n              无法获取简历内容\n              <br />\n              请检查您的网络连接情况或稍后再试\n            </div>\n          )}\n\n          {!isLoading && !isError && resume && (\n            <>\n              <BriefInfoView info={resume.brief} />\n              {resume.infos.map(info => {\n                return (\n                  <GroupView key={info.title} title={info.title}>\n                    {info.type === 'skill' && <SkillInfoView content={info.content} />}\n                    {info.type === 'project' && <ProjectInfoView content={info.content} />}\n                    {info.type === 'company' && <CompanyInfoView content={info.content} />}\n                    {info.type === 'education' && <EducationInfoView content={info.content} />}\n                    {info.type === 'opensource' && <OpenSourceInfoView content={info.content} />}\n                  </GroupView>\n                )\n              })}\n            </>\n          )}\n        </main>\n      </div>\n    </ThemeContext.Provider>\n  )\n}\n\nexport default ResumePage\n","import { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nexport const useGistResume: CustomHook<\n  void,\n  [\n    { resume: Resume | null; isLoading: boolean; isError: boolean },\n    React.Dispatch<React.SetStateAction<string>>\n  ]\n> = () => {\n  const [resume, setResume] = useState<Resume | null>(null)\n  const [url, setUrl] = useState<string>(process.env.REACT_APP_GIST_RESUME_URL || '')\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [isError, setIsError] = useState<boolean>(false)\n\n  useEffect(() => {\n    if (!url) {\n      return\n    }\n    const fetchData: () => Promise<void> = async () => {\n      setIsError(false)\n      setIsLoading(true)\n      try {\n        const resp = await axios(url)\n        await new Promise(resolve => setTimeout(() => resolve(), 500))\n        setResume(resp.data as Resume)\n      } catch (error) {\n        setIsError(true)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n    fetchData()\n  }, [url])\n\n  return [{ resume, isLoading, isError }, setUrl]\n}\n","import React from 'react'\nimport { ResumePage } from 'page'\n\nconst App: React.FC = () => {\n  return <ResumePage />\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'normalize.css'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timeSide\":\"Timeline_timeSide__1VJYZ\",\"timeInRow\":\"Timeline_timeInRow__255Id\",\"item\":\"Timeline_item__3MiUN\",\"itemContentBox\":\"Timeline_itemContentBox__3tEnw\",\"itemContent\":\"Timeline_itemContent__3tTYB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"desc\":\"ProjectInfoView_desc__kpDWP\",\"title\":\"ProjectInfoView_title__3aVQ9\",\"projMark\":\"ProjectInfoView_projMark__nAyy6\",\"projMarkTag\":\"ProjectInfoView_projMarkTag__6ZLY-\",\"tagsContainer\":\"ProjectInfoView_tagsContainer__2Gbi_\",\"achievement\":\"ProjectInfoView_achievement__15gbV\"};"],"sourceRoot":""}